#! /bin/bash

#SETTING UP VARS

CURR_DIR=$(pwd)
LOGSTASH_VERSION="1.5.0"
LOGSTASH_DL_LINK="https://download.elastic.co/logstash/logstash/logstash-${LOGSTASH_VERSION}.tar.gz"
PYTHON_SCRIPT="$CURR_DIR/test_helper.py"

# CREATING TESTING DIRECTORY
key=$RANDOM
mkdir ../logstash_test_$key
cd ../logstash_test_$key
TEST_DIR=$(pwd)

CONFIG0='
input{
    file{ 
        path => "'${TEST_DIR}'/input_files/*" 
        start_position => "beginning"
    }
}
filter{
    sleep {
        time => "10"
        every => 50000
    }
    intervalmetric{
        counter => ["%{message}"]
        count_interval => 10
        add_tag => "im"
    }
    if "im" not in [tags]{
    metrics{
        meter => "%{message}"
        add_tag => "m"
        rates => []
        flush_interval => 5 
    }
    }
}
output{
    if "im" in [tags]{
        file{
            path => "'${TEST_DIR}'/output_files/intervalmetrics.log"
            codec => "rubydebug"
        }
    }
    if "m" in [tags]{
        file{
            path => "'${TEST_DIR}'/output_files/metrics.log"
            codec => "rubydebug"
        } 
        stdout{
            codec => "rubydebug"
        }
    }
}
'
CONFIG1='
input{
    file{ 
        path => "'${TEST_DIR}'/input_files/*" 
        start_position => "beginning"
    }
}
filter{
    sleep {
        time => "5"
        every => 100000
    }
    intervalmetric{
        counter => ["%{message}"]
        count_interval => 10
        add_tag => "im"
    }
}
output{
    if "im" in [tags]{
        file{
            path => "'${TEST_DIR}'/output_files/intervalmetrics.log"
            codec => "rubydebug"
        }
        stdout{
            codec => "rubydebug"
        }
    }
}
'



# Calling sudo early so it doesn't get burried by the stdout

cd $TEST_DIR
sudo ls 

# INSTALLING A PORTABLE LOGSTASH

cd $TEST_DIR
curl -O ${LOGSTASH_DL_LINK} 
tar -zxf logstash-${LOGSTASH_VERSION}.tar.gz
rm logstash-${LOGSTASH_VERSION}.tar.gz
mv logstash-${LOGSTASH_VERSION} logstash

# BUILDING FILTER INTO LOGSTASH

cd $CURR_DIR
gem build logstash-filter-intervalmetric.gemspec
$TEST_DIR/logstash/bin/plugin install logstash-filter-intervalmetric-*.gem

# RUNNING LOGSTASH

cd $TEST_DIR
mkdir input_files
mkdir output_files
echo "running: $CONFIG1"
logstash/bin/logstash -e "$CONFIG1" &
PID=$!
SLEEP_TIME=180
while true; do
    echo "one iter started"
    for i in $(seq 1 15); do
        # python $PYTHON_SCRIPT generatefile "$TEST_DIR/input_files/$i.txt" "$RANDOM" 50000
        python $PYTHON_SCRIPT generate_random_file "$TEST_DIR/input_files/$i.txt" 1000
        wc $TEST_DIR/input_files/$i.txt
    done
    sleep $SLEEP_TIME
    # for i in $(seq 1 15); do
    #     > $TEST_DIR/input_files/$i.txt
    #     wc $TEST_DIR/input_files/$i.txt
    # done
    # python $PYTHON_SCRIPT compare "${TEST_DIR}/output_files/intervalmetrics.log" "${TEST_DIR}/output_files/metrics.log" 
    # if $(python $PYTHON_SCRIPT track $TEST_DIR/output_files/intervalmetrics.log); then
    #    ((SLEEP_TIME += 5))
    #else
    #    ((SLEEP_TIME -= 5))
    #fi
    echo $SLEEP_TIME
done

